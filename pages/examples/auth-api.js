import {
  getCurrentLocaleStore,
  globalDrupalStateAuthStores,
} from "../../lib/drupalStateContext";

import Head from "next/head";
import Link from "next/link";
import Layout from "../../components/layout";

export default function AuthApiExampleTemplate({ articles, footerMenu }) {
  return (
    <Layout footerMenu={footerMenu}>
      <Head>
        <title>API Authorization Example</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="prose lg:prose-xl mt-10 flex flex-col mx-auto max-h-screen">
        <h1>API Authorization Example</h1>

        <Link passHref href="/">
          <span className="w-full underline cursor-pointer">Home &rarr;</span>
        </Link>

        <div className="mt-12 max-w-lg mx-auto lg:grid-cols-3 lg:max-w-screen-lg">
          {articles?.length > 0 ? (
            <p>
              ðŸŽ‰ NextJS was able to successfuly make an authenticated request to
              Drupal! ðŸŽ‰
            </p>
          ) : (
            <>
              <p>
                NextJS was unable to make an authorized request to the Drupal
                API. Please check your .env.development.local file to ensure
                that your CLIENT_ID and CLIENT_SECRET are set correctly.
              </p>
              <p>
                For more information on how to set these values, please see{" "}
                <a href="https://github.com/pantheon-systems/decoupled-kit-js/blob/canary/web/docs/Frontend%20Starters/Next%20Drupal/setting-environment-variables.md">
                  Setting Environment Variables
                </a>
              </p>
            </>
          )}
        </div>
      </div>
    </Layout>
  );
}

export async function getStaticProps({ locale }) {
  const authStore = getCurrentLocaleStore(locale, globalDrupalStateAuthStores);

  if (!authStore.auth) {
    return { props: {} };
  }

  try {
    const articles = await authStore.getObject({
      objectName: "node--article",
    });
    const footerMenu = await authStore.getObject({
      objectName: "menu_items--main",
    });
    return {
      props: {
        articles,
        footerMenu,
      },
      revalidate: 60,
    };
  } catch (error) {
    process.env.DEBUG_MODE &&
      console.error(
        "Error occurred while fetching the authorized example: ",
        error
      );
    return { props: {} };
  }
}
